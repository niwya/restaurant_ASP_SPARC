// ALREADY DOCUMENTED ACTIONS: //

# pick_customer(E,Cu) #
pick_customer(agent,Cu) causes {-iswaiting(Cu), iswith(agent,Cu)} 
impossible pick_customer(agent,Cu) if not iswaiting(Cu)
impossible pick_customer(agent,Cu) if not currentlocation(agent,e)
impossible pick_customer(agent,Cu) if not isfree(T)
impossible pick_customer(agent,Cu2) if iswith(agent,Cu1), Cu2!=Cu1

# seat_customer(E,Cu,Ch) # 
seat_customer(agent,Cu,Ch) causes {isonchair(Cu,Ch), -iswith(agent,Cu)} 
impossible seat_customer(agent,Cu,Ch) if not isfree(Ch)
impossible seat_customer(agent,Cu,Ch) if not iswith(agent,Cu) 
impossible seat_customer(agent,Cu,Ch) if {currentlocation(agent,N), -areassociated(N,T), isattable(Ch,T)}

IF CUSTOMERS ARE SAT AT TABLES
seat_customer(agent,Cu,T) causes {isonchair(Cu,Ch), -iswith(agent,Cu)} if isattable(Ch,T)
impossible seat_customer(agent,Cu,T) if -isfree(T)
impossible seat_customer(agent,Cu,T) if -iswith(agent,Cu)
impossible seat_customer(agent,Cu,T) if {currentlocation(agent,N), -areassociated(N,T)}

# give_bill(E,Cu) #
give_bill(agent,Cu) causes haspaid(Cu)
impossible give_bill(agent,Cu) if -wants_bill(Cu)
impossible give_bill(agent,Cu) if {currentlocation(agent,N), -areassociated(N,T), isattable(Ch,T), isonchair(Cu,Ch)}

# go_to(E,N) #
go_to(agent,N) causes currentlocation(agent,N) if {currentlocation(agent,M), N!=M}
impossible go_to(agent,N) if {-edge(M,N), currentlocation(agent,M)}
impossible go_to(agent,N) if {currentlocation(E,N), agent!=E}