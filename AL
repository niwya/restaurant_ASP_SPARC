// ALREADY DOCUMENTED ACTIONS: //

# seat_customer(Cu,Ch) # 
seat_customer(Cu,Ch) causes {isonchair(Cu,Ch), -iswithagent(Cu) if {currentlocation(N), areassociated(N,T), isattable(Ch,T)} 
impossible seat_customer(Cu,Ch) if not isfree(Ch)
impossible seat_customer(Cu,Ch) if not iswithagent(Cu)

# pick_customer(Cu) #
pick(Cu) causes {-iswaiting(Cu), iswithagent(Cu)} 
impossible pick_customer(Cu) if -iswaiting(Cu)
impossible pick_customer(Cu) if not currentlocation(agent,e)
impossible pick_customer(Cu) if not isfree(Ch)

# give_bill(Cu) #
bill_wave(Cu) causes wants_bill(Cu)
wants_bill(Cu) causes give_bill(Cu) if {currentlocation(N), areassociated(N,T), isattable(Ch,T), isonchair(Cu,Ch)}
give_bill(Cu) causes haspaid(Cu)
impossible give_bill(Cu) if -isonchair(Ch,Cu)
impossible give_bill(Cu) if -wants_bill(Cu)
impossible bill_wave(Cu) if -isonchair(Ch,Cu)

# go_to(N) #
go_to(N) causes currentlocation(N) if currentlocation(M)
impossible if not edge(M,N)








// OTHER ACTIONS TO BE ADDED //

# pick(O) #

# drop(O) #

# pick_chair(Ch,T) #
pick_chair(Ch,T) causes {holding(Ch), -isattable(Ch,T)}
impossible pick_chair(Ch,T) if {-currentlocation(N), isattable(Ch,T), areassociated(N,T)}
impossible pick_chair(Ch,T) if -isfree(Ch)

# drop_chair(Ch,T) #
drop_chair(Ch,T) causes isattable(Ch,T) if holding(Ch)
impossible drop_chair(Ch,T) if {-currentlocation(N), areassociated(N,T)}
